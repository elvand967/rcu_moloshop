# Generated by Django 5.2.5 on 2025-09-26 15:42

import django.core.validators
import django.db.models.deletion
import mptt.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='business_favicons/', verbose_name='favicon.ico')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='business_logos/')),
                ('description', models.TextField(blank=True, verbose_name='Общее описание бизнеса')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Активированный бизнес')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businesses', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Бизнес',
                'verbose_name_plural': 'Бизнесы',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('namespace', models.CharField(blank=True, help_text='Пространство имён для slug (опционально)', max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='business.business', verbose_name='Бизнес')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='business.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, default='Вся Беларусь', max_length=255, null=True, verbose_name='Локация')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_info', to='business.business')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('file', models.FileField(upload_to='uploads/%Y/%m/%d/', verbose_name='Файл')),
                ('alt_text', models.CharField(blank=True, max_length=255, verbose_name='Описание')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_main', models.BooleanField(default=False, verbose_name='Основное изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Медиа',
                'verbose_name_plural': 'Медиа',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Messenger',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('messenger_type', models.CharField(choices=[('phone', 'Телефон'), ('email', 'Email'), ('whatsapp', 'WhatsApp'), ('telegram', 'Telegram'), ('viber', 'Viber'), ('instagram', 'Instagram'), ('facebook', 'Facebook'), ('vk', 'ВКонтакте'), ('skype', 'Skype')], max_length=20, verbose_name='Тип мессенджера')),
                ('identifier', models.CharField(max_length=255, verbose_name='Идентификатор или ссылка')),
                ('contact_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messengers', to='business.contactinfo')),
            ],
            options={
                'verbose_name': 'Мессенджер',
                'verbose_name_plural': 'Мессенджеры',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('namespace', models.CharField(blank=True, help_text='Пространство имён для slug (опционально)', max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена за единицу')),
                ('currency', models.CharField(blank=True, choices=[('BYN', 'Белорусский рубль'), ('RUB', 'Российский рубль'), ('USD', 'Доллар США'), ('EUR', 'Евро'), ('PLN', 'Польский злотый')], default='BYN', max_length=3, verbose_name='Валюта')),
                ('rating', models.FloatField(default=0, help_text='Средний рейтинг')),
                ('total_likes', models.PositiveIntegerField(default=0, help_text='Всего лайков')),
                ('total_dislikes', models.PositiveIntegerField(default=0, help_text='Всего дизлайков')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Рекомендуемый')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('sku', models.CharField(blank=True, default='', max_length=64, verbose_name='Артикул')),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='Остаток')),
                ('delivery_info', models.CharField(blank=True, default='Самовывоз', help_text='Информация по доставке', max_length=255, null=True)),
                ('unit', models.CharField(choices=[('pcs', 'Штука'), ('kg', 'Килограмм'), ('g', 'Грамм'), ('l', 'Литр'), ('m', 'Метр'), ('m2', 'Квадратный метр'), ('m3', 'Кубический метр'), ('pkg', 'Упаковка')], default='pcs', max_length=10, verbose_name='Единица')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/covers/', verbose_name='Обложка')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='business.business', verbose_name='Бизнес')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss', to='business.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=100, verbose_name='Отчество')),
                ('position', models.CharField(blank=True, max_length=255, verbose_name='Должность / специализация')),
                ('bio', models.TextField(blank=True, verbose_name='Описание / биография')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='staff_photos/', verbose_name='Фото')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('rating', models.FloatField(default=0.0, help_text='Средний рейтинг мастера от 0 до 5', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_members', to='business.business')),
            ],
            options={
                'verbose_name': 'Мастер / специалист',
                'verbose_name_plural': 'Мастера / специалисты',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('namespace', models.CharField(blank=True, help_text='Пространство имён для slug (опционально)', max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена за единицу')),
                ('currency', models.CharField(blank=True, choices=[('BYN', 'Белорусский рубль'), ('RUB', 'Российский рубль'), ('USD', 'Доллар США'), ('EUR', 'Евро'), ('PLN', 'Польский злотый')], default='BYN', max_length=3, verbose_name='Валюта')),
                ('rating', models.FloatField(default=0, help_text='Средний рейтинг')),
                ('total_likes', models.PositiveIntegerField(default=0, help_text='Всего лайков')),
                ('total_dislikes', models.PositiveIntegerField(default=0, help_text='Всего дизлайков')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Рекомендуемый')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('sku', models.CharField(blank=True, default='', max_length=64, verbose_name='Артикул')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Длительность')),
                ('place_of_service', models.CharField(blank=True, help_text='Например, на дому, в салоне и т.п.', max_length=255, verbose_name='Место оказания услуги')),
                ('unit', models.CharField(choices=[('acad_hour', 'Академический час'), ('session', 'Сеанс'), ('haircut', 'Стрижка'), ('consultation', 'Консультация'), ('visit', 'Визит'), ('package', 'Пакет'), ('service', 'Услуга'), ('hour', 'Час'), ('day', 'День'), ('task', 'Задача')], default='service', max_length=20, verbose_name='Единица')),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/covers/', verbose_name='Обложка')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='business.business', verbose_name='Бизнес')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss', to='business.category', verbose_name='Категория')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='business.staff', verbose_name='Мастер / специалист')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(fields=('namespace', 'slug'), name='uniq_category_namespace_slug'),
        ),
        migrations.AlterUniqueTogether(
            name='messenger',
            unique_together={('contact_info', 'messenger_type', 'identifier')},
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('namespace', 'slug'), name='uniq_product_namespace_slug'),
        ),
        migrations.AlterUniqueTogether(
            name='staff',
            unique_together={('business', 'email')},
        ),
        migrations.AddConstraint(
            model_name='service',
            constraint=models.UniqueConstraint(fields=('namespace', 'slug'), name='uniq_service_namespace_slug'),
        ),
    ]
