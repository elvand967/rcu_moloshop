# Generated by Django 5.2.5 on 2025-09-19 00:42

import django.db.models.deletion
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='business',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businesses', to=settings.AUTH_USER_MODEL, verbose_name='Владелец'),
        ),
        migrations.AddField(
            model_name='category',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='business.business'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='business.category', verbose_name='Родительская категория'),
        ),
        migrations.AddField(
            model_name='contactinfo',
            name='business',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_info', to='business.business'),
        ),
        migrations.AddField(
            model_name='goods',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goods', to='business.business'),
        ),
        migrations.AddField(
            model_name='goods',
            name='category',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods', to='business.category'),
        ),
        migrations.AddField(
            model_name='landing',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='landings', to='business.business', verbose_name='Бизнес'),
        ),
        migrations.AddField(
            model_name='messenger',
            name='contact_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messengers', to='business.contactinfo'),
        ),
        migrations.AddField(
            model_name='section',
            name='landing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='business.landing', verbose_name='Лендинг'),
        ),
        migrations.AddField(
            model_name='sectionimage',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='business.section', verbose_name='Секция'),
        ),
        migrations.AddField(
            model_name='service',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='business.business'),
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='business.category'),
        ),
        migrations.AddField(
            model_name='staff',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_members', to='business.business'),
        ),
        migrations.AddField(
            model_name='service',
            name='staff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='business.staff', verbose_name='Мастер / специалист'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('business', 'slug')},
        ),
        migrations.AddConstraint(
            model_name='goods',
            constraint=models.UniqueConstraint(condition=models.Q(('sku', ''), _negated=True), fields=('business', 'sku'), name='unique_goods_sku_per_business_not_empty'),
        ),
        migrations.AlterUniqueTogether(
            name='messenger',
            unique_together={('contact_info', 'messenger_type', 'identifier')},
        ),
        migrations.AlterUniqueTogether(
            name='staff',
            unique_together={('business', 'email')},
        ),
        migrations.AddConstraint(
            model_name='service',
            constraint=models.UniqueConstraint(condition=models.Q(('sku', ''), _negated=True), fields=('business', 'sku'), name='unique_service_sku_per_business_not_empty'),
        ),
    ]
