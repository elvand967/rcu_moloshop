# Generated by Django 5.2.5 on 2025-09-19 00:42

import apps.users.utils.avatar
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Фамилия')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Сотрудник')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователя',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='ProfileMenuCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(blank=True, help_text="Имя URL-шаблона с namespace (например: 'landing:policy_detail')", max_length=200)),
                ('url_params', models.JSONField(blank=True, help_text='Параметры для reverse(), например: {"slug":"politika-konfidentsialnosti"}', null=True)),
                ('external_url', models.URLField(blank=True, help_text='Внешняя ссылка (например: https://t.me/moloshop)', null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active_link', models.BooleanField(default=True, help_text='Активная ссылка')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='users.profilemenucategory')),
            ],
            options={
                'verbose_name': 'Пункт меню',
                'verbose_name_plural': 'Меню личного кабинета',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_status', models.PositiveSmallIntegerField(choices=[(0, 'Гость'), (1, 'Пользователь'), (2, 'Сотрудник'), (3, 'Мастер'), (4, 'Руководитель'), (5, 'Администратор'), (6, 'Суперпользователь')], default=0, verbose_name='Статус пользователя')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=apps.users.utils.avatar.avatar_upload_to, verbose_name='Аватар')),
                ('phone_number_display', models.CharField(blank=True, help_text='Формат на усмотрение пользователя: +375(25)963-3344 или 103', max_length=50, verbose_name='Телефон')),
                ('phone_number_digits', models.CharField(blank=True, help_text="Автоматически генерируется из поля 'Телефон (как ввёл пользователь)'", max_length=50, verbose_name='Телефон (только цифры)')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('bio', models.TextField(blank=True, max_length=500, null=True, verbose_name='О себе')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Веб-сайт')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='Локация')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Мужской'), ('female', 'Женский'), ('other', 'Другое')], max_length=20, null=True, verbose_name='Пол')),
                ('is_active_user', models.BooleanField(default=True, help_text='Активный пользователь')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('email_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='Код подтверждения email')),
                ('email_code_created', models.DateTimeField(blank=True, null=True, verbose_name='Время создания кода')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
        ),
    ]
