# Generated by Django 5.2.5 on 2025-09-19 00:42

import ckeditor_uploader.fields
import django.core.validators
import django.db.models.deletion
import mptt.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContractsInstructions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('namespace', models.CharField(blank=True, help_text='Пространство имён для slug (опционально)', max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('seo_title', models.CharField(blank=True, max_length=70, verbose_name='SEO заголовок')),
                ('seo_description', models.CharField(blank=True, max_length=160, verbose_name='SEO описание')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Политику, правила, инструкции',
                'verbose_name_plural': 'Политики, правила, инструкции',
            },
        ),
        migrations.CreateModel(
            name='SEOReplacement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source_word', models.CharField(help_text='Слово или бренд, например айфон', max_length=100, unique=True)),
                ('replacement', models.CharField(help_text='SEO-замена, например iphone', max_length=100)),
            ],
            options={
                'verbose_name': 'SEO-Замена',
                'verbose_name_plural': 'SEO-Замены',
            },
        ),
        migrations.CreateModel(
            name='FooterMenuCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='footer_menu_icons')),
                ('url', models.CharField(blank=True, default='#', help_text="Имя URL-шаблона с namespace (например: 'core:policy_detail')", max_length=200)),
                ('url_params', models.JSONField(blank=True, help_text="Параметры для reverse(), например: {'slug': 'privacy-policy'}", null=True)),
                ('external_url', models.URLField(blank=True, help_text='Внешняя ссылка (например: https://t.me/moloshop)', null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('col_desctop', models.PositiveIntegerField(default=0, help_text='Количество колонок в строке (0-12) для desktop', validators=[django.core.validators.MaxValueValidator(12)])),
                ('col_md', models.PositiveIntegerField(default=0, help_text='Количество колонок в строке (0-12) для mobile', validators=[django.core.validators.MaxValueValidator(12)])),
                ('is_active_link', models.BooleanField(default=True, help_text='Активная ссылка')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.footermenucategory')),
            ],
            options={
                'verbose_name': 'Пункт меню',
                'verbose_name_plural': 'Меню footer',
            },
        ),
        migrations.CreateModel(
            name='StopWord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lang', models.CharField(default='ru', help_text='Код языка, например ru или en', max_length=5)),
                ('word', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'SEO-Стоп-слово',
                'verbose_name_plural': 'SEO-Стоп-слова',
                'unique_together': {('lang', 'word')},
            },
        ),
    ]
