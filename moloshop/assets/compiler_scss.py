# moloshop/assets/compiler_scss.py

import sys
from pathlib import Path
import sass

# === –ò–º–ø–æ—Ä—Ç BASE_DIR –∏–∑ Django settings ===
try:
    sys.path.append(str(Path(__file__).resolve().parent.parent))  # ../moloshop/
    from config.settings.base import BASE_DIR
except ImportError as e:
    print("‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ BASE_DIR –∏–∑ config.settings.base")
    print("‚ÑπÔ∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ moloshop –∏–ª–∏ moloshop/assets")
    raise e

print("üîß –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–ø–∏–ª—è—Ü–∏—é SCSS ‚Üí CSS...\n")

apps_dir = BASE_DIR / 'apps'
core_partials_path = BASE_DIR / 'apps/core/static/core/scss/partials'  # –ü—É—Ç—å –∫ –≥–ª–æ–±–∞–ª—å–Ω—ã–º partials

for app_path in apps_dir.iterdir():
    if not app_path.is_dir():
        continue

    app_name = app_path.name
    app_static_dir = app_path / 'static' / app_name
    scss_dir = app_static_dir / 'scss'
    css_dir = app_static_dir / 'css'

    # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    if not scss_dir.exists():
        scss_dir.mkdir(parents=True, exist_ok=True)
        print(f"üìÅ [created] {scss_dir}")

    if not css_dir.exists():
        css_dir.mkdir(parents=True, exist_ok=True)
        print(f"üìÅ [created] {css_dir}")

    # –î–ª—è core –∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º –¥–≤–∞ —Ñ–∞–π–ª–∞-—Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞
    if app_name == 'core':
        files_to_compile = {
            'global_core.scss': 'global_core.css',
            'core.scss': 'core.css',
        }

        for scss_filename, css_filename in files_to_compile.items():
            scss_path = scss_dir / scss_filename
            css_path = css_dir / css_filename

            if not scss_path.exists():
                print(f"‚ùå [core] –ù–µ –Ω–∞–π–¥–µ–Ω SCSS-—Ñ–∞–π–ª {scss_filename}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–ø–∏–ª—è—Ü–∏—é.")
                continue

            try:
                compiled_css = sass.compile(
                    filename=str(scss_path),
                    output_style='compressed',
                    include_paths=[str(scss_dir), str(core_partials_path)]  # –î–æ–±–∞–≤–ª–µ–Ω core_partials –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö partials
                )
                css_path.write_text(compiled_css, encoding='utf-8')
                print(f"‚úÖ [core] {scss_filename} ‚Üí {css_filename}")
            except sass.CompileError as e:
                print(f"‚ùå [core] –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ {scss_filename}: {e}")

    else:
        # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π ‚Äî –∫–ª–∞—Å—Å–∏–∫–∞: –æ–¥–∏–Ω SCSS ‚Üí –æ–¥–∏–Ω CSS
        scss_file = scss_dir / f'{app_name}.scss'
        css_file = css_dir / f'{app_name}.css'

        # –°–æ–∑–¥–∞—ë–º –∑–∞–≥–ª—É—à–∫—É, –µ—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç
        if not scss_file.exists():
            scss_file.write_text(
                f"// SCSS –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è {app_name}\n\nbody {{\n  // background-color: #f9f9f9;\n}}\n",
                encoding='utf-8'
            )
            print(f"üìù [created] {scss_file.name}")

        try:
            compiled_css = sass.compile(
                filename=str(scss_file),
                output_style='compressed',
                include_paths=[str(scss_dir), str(core_partials_path)]  # –î–æ–±–∞–≤–ª—è–µ–º core_partials, —á—Ç–æ–±—ã –±—ã–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω—ã–µ partials
            )
            css_file.write_text(compiled_css, encoding='utf-8')
            print(f"‚úÖ [{app_name}] {scss_file.name} ‚Üí {css_file.name}")
        except sass.CompileError as e:
            print(f"‚ùå [{app_name}] –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏: {e}")

print("\nüéâ –ö–æ–º–ø–∏–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
